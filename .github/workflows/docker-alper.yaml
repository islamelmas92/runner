name: Build and Push Docker Images
run-name: Build ${{ github.ref_name }} image
on:
  push:
    branches:
      - 'release/PROD-Dashboard'
      - 'release/PROD-Main'
      - 'release/PROD-ShipStation'
      - 'release/PROD-Etsy'
      - 'release/PROD-FileManager'
      - 'release/PROD-Shipment'
  workflow_dispatch:
    inputs:
      arc_name:
        description: 'Target ARC name used for `runs-on` in job'
        required: true
        default: "runners-dind"

jobs:
  prepare:
    runs-on: runners-dind
    container:
      image: alpine
    outputs:
      app_name: ${{ steps.set-vars.outputs.app_name }}
      image_tag: ${{ steps.set-vars.outputs.image_tag }}
    steps:
      - name: Set variables
        id: set-vars
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          APP_NAME=$(echo $BRANCH_NAME | sed 's/release\/PROD-//g' | tr '[:upper:]' '[:lower:]')
          echo "app_name=${APP_NAME}" >> $GITHUB_OUTPUT
          echo "image_tag=tf:prod-${APP_NAME}-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

  docker:
    needs: prepare
    runs-on: runners-dind
    container:
      image: registry.digitalocean.com/customhub-dashboard/tf:kainko-1.0.0
      # image:  "docker.io/islamelmas92/build"
      credentials:
        username: ${{ secrets.DO_REGISTRY }}
        password: ${{ secrets.DO_REGISTRY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and push image to DigitalOcean
        env:
          APP_NAME: ${{ needs.prepare.outputs.app_name }}
          IMAGE_TAG: ${{ needs.prepare.outputs.image_tag }}
        run: |
          echo $APP_NAME
          echo $IMAGE_TAG
          echo "{\"auths\":{\"registry.digitalocean.com\":{\"auth\":\"$(echo -n ${{ secrets.DO_REGISTRY }}:${{ secrets.DO_REGISTRY }} | base64 -w 0)\"}}}" > /kaniko/.docker/config.json
          # /kaniko/executor \
          #   --context . \
          #   --dockerfile Dockerfile \
          #   --destination registry.digitalocean.com/customhub-dashboard/${APP_NAME}:${IMAGE_TAG} \
          #   --destination registry.digitalocean.com/customhub-dashboard/${APP_NAME}:latest
          /kaniko/executor \
            --context . \
            --dockerfile Dockerfile \
            --destination registry.digitalocean.com/customhub-dashboard/tf:test-1.0.0
  trivy:
    runs-on: runners-dind
    needs:
    - prepare
    - docker
    container:
        image: "docker.io/aquasec/trivy:0.37.2"
        env:
            TRIVY_AUTH_URL: 'https://registry.digitalocean.com'
            TRIVY_USERNAME: ${{ secrets.DO_REGISTRY }}
            TRIVY_PASSWORD: ${{ secrets.DO_REGISTRY }}
    steps:
    - name: trivy scan
      run: |
        trivy --version
        trivy image  --no-progress -f table  registry.digitalocean.com/customhub-dashboard/tf:test-1.0.0  -o summary-image-report.txt
        trivy image --no-progress --format template --template '{{- $critical := 0 }}{{- $high := 0 }}{{- range . }}{{- range .Vulnerabilities }}{{- if  eq .Severity "CRITICAL" }}{{- $critical = add $critical 1 }}{{- end }}{{- if  eq .Severity "HIGH" }}{{- $high = add $high 1 }}{{- end }}{{- end }}{{- end }}Critical: {{ $critical }}, High: {{ $high }}'  registry.digitalocean.com/customhub-dashboard/tf:test-1.0.0 -o trivy_summary.txt
        cat summary-image-report.txt
        cat trivy_summary.txt
    - uses: actions/upload-artifact@v4
      with:
        name: trivy-reports
        path: |
            summary-image-report.txt
